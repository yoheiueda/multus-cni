name: Docker-build-push-latest
on: 
  push:
    branches:
      - master
jobs:
  build:
    name: Docker build
    runs-on: ubuntu-latest
    env:
      DOCKER_CLI_EXPERIMENTAL: enabled
      GO111MODULE: on
      TARGET: amd64
      REPOSITORY: nfvpe/multus
      REPOSITORY_USER: nfvperobot
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
  
      - name: Build latest-amd64
        run: docker build -t ${REPOSITORY}:latest-amd64 -f deployments/Dockerfile .
  
      - name: Build latest-ppc64le
        run: docker build -t ${REPOSITORY}:latest-ppc64le -f deployments/Dockerfile.ppc64le .
  
      - name: Build latest-arm64v8
        run: docker build -t ${REPOSITORY}:latest-arm64v8 -f deployments/Dockerfile.arm64 .

      - name: Build latest-s390x
        run: docker build -t ${REPOSITORY}:latest-s390x -f deployments/Dockerfile.s390x .
  
      - name: Build latest-origin
        run: docker build -t ${REPOSITORY}:latest-origin -f deployments/Dockerfile.openshift .
  
      - name: Tag snapshot
        run: |
          docker tag ${REPOSITORY}:latest-amd64 ${REPOSITORY}:snapshot-amd64
          docker tag ${REPOSITORY}:latest-ppc64le ${REPOSITORY}:snapshot-ppc64le
          docker tag ${REPOSITORY}:latest-arm64v8 ${REPOSITORY}:snapshot-arm64v8
          docker tag ${REPOSITORY}:latest-s390x ${REPOSITORY}:snapshot-s390x

      - name: Login to registry
        if: github.repository == 'intel/multus-cni'
        run: docker login -u ${REPOSITORY_USER} -p ${{ secrets.REPOSITORY_PASS }}
  
      - name: Push latest/snapshot images
        if: github.repository == 'intel/multus-cni'
        run: |
          docker push ${REPOSITORY}:latest-amd64
          docker push ${REPOSITORY}:latest-ppc64le
          docker push ${REPOSITORY}:latest-arm64v8
          docker push ${REPOSITORY}:latest-s390x
          docker push ${REPOSITORY}:snapshot-amd64
          docker push ${REPOSITORY}:snapshot-ppc64le
          docker push ${REPOSITORY}:snapshot-arm64v8
          docker push ${REPOSITORY}:snapshot-s390x
  
      - name: Create manifest for multi-arch images
        if: github.repository == 'intel/multus-cni'
        run: |
          docker manifest create ${REPOSITORY}:snapshot ${REPOSITORY}:snapshot-amd64 ${REPOSITORY}:snapshot-ppc64le ${REPOSITORY}:snapshot-arm64v8 ${REPOSITORY}:snapshot-s390x
          docker manifest annotate ${REPOSITORY}:snapshot ${REPOSITORY}:snapshot-amd64 --arch amd64
          docker manifest annotate ${REPOSITORY}:snapshot ${REPOSITORY}:snapshot-ppc64le --arch ppc64le
          docker manifest annotate ${REPOSITORY}:snapshot ${REPOSITORY}:snapshot-arm64v8 --arch arm64
          docker manifest annotate ${REPOSITORY}:snapshot ${REPOSITORY}:snapshot-s390x --arch s390x
          docker manifest push ${REPOSITORY}:snapshot
          docker manifest create ${REPOSITORY}:latest ${REPOSITORY}:latest-amd64 ${REPOSITORY}:latest-ppc64le ${REPOSITORY}:latest-arm64v8 ${REPOSITORY}:latest-s390x
          docker manifest annotate ${REPOSITORY}:latest ${REPOSITORY}:latest-amd64 --arch amd64
          docker manifest annotate ${REPOSITORY}:latest ${REPOSITORY}:latest-ppc64le --arch ppc64le
          docker manifest annotate ${REPOSITORY}:latest ${REPOSITORY}:latest-arm64v8 --arch arm64
          docker manifest annotate ${REPOSITORY}:latest ${REPOSITORY}:latest-s390x --arch s390x
          docker manifest push ${REPOSITORY}:latest
